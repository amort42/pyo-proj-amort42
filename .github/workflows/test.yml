---
name: Testing

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_call:

jobs:
  Testing:
    runs-on: ubuntu-latest
    steps:
      # check-out repo
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
      # install poetry
      - name: Install poetry
        run: pipx install poetry==1.3.1
      # set-up python with cache
      - name: Setup Python 3.11.7
        uses: actions/setup-python@v4
        with:
          python-version: "3.11.7"
          cache: "poetry"
      # install requirements (including dev dependencies)
      - name: Install requirements
        run: poetry install --with test
      # run unit tests
      - name: Run unit-tests
        run: |
          set -o pipefail
          poetry run make unit-tests-cov
      # add pytest coverage report to PR
      - name: Pytest coverage comment
        if: ${{ success() && github.event_name == 'pull_request' }}
        id: coverageComment
        uses: MishaKav/pytest-coverage-comment@main
        with:
          pytest-coverage-path: pytest-coverage.txt
          pytest-xml-coverage-path: coverage.xml
          title: My Coverage Report Title
          badge-title: My Badge Coverage Title
          hide-badge: false
          hide-report: false
          create-new-comment: false
          hide-comment: false
          report-only-changed-files: false
          remove-link-from-badge: false
          unique-id-for-comment: python3.8
          junitxml-path: pytest.xml
          junitxml-title: My JUnit Xml Summary Title
